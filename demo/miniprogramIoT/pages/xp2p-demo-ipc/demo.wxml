<view wx:if="{{cfg}}">
  <view wx:if="{{!deviceInfo}}" class="page-body page-body-padding">
    <iot-device-input
      cfg="{{cfg}}"
      bind:startPlayer="onStartPlayer"
    />
  </view>
  <view wx:elif="{{p2pMode !== 'ipc'}}">not for p2pMode {{p2pMode}}</view>
  <view wx:elif="{{sceneType !== 'live'}}">not for sceneType {{sceneType}}</view>
  <view wx:else class="page-body">
    <iot-p2p-player-with-mjpg
      id="{{playerId}}"
      class="my-player"
      deviceInfo="{{deviceInfo}}"
      xp2pInfo="{{xp2pInfo}}"
      liveStreamDomain="{{liveStreamDomain}}"
      sceneType="{{sceneType}}"
      streamQuality="{{streamQuality}}"
      needCheckStream="{{options.needCheckStream}}"
      mode="{{options.playerRTC ? 'RTC' : 'live'}}"
      muted="{{muted}}"
      orientation="{{orientation}}"
      acceptPlayerEvents="{{acceptPlayerEvents}}"
      showLog="{{showLog}}"
      showDebugInfo="{{showDebugInfo}}"
      onlyp2pMap="{{onlyp2pMap}}"
      bind:playerstatechange="onPlayerEvent"
      bind:streamstatechange="onPlayerEvent"
      bind:playstart="onPlayStateEvent"
      bind:playsuccess="onPlayStateEvent"
      bind:playstop="onPlayStateEvent"
      bind:playend="onPlayStateEvent"
      bind:playerror="onPlayError"
      bind:netstatus="onPlayerEvent"
      bind:fullscreenchange="onFullScreenChange"
      bind:mjpgplayerstatechange="onMjpgPlayerEvent"
      bind:mjpgstreamstatechange="onMjpgPlayerEvent"
      bind:mjpgplaystart="onMjpgPlayStateEvent"
      bind:mjpgplaysuccess="onMjpgPlayStateEvent"
      bind:mjpgplaystop="onMjpgPlayStateEvent"
      bind:mjpgplayend="onMjpgPlayStateEvent"
      bind:mjpgplayerror="onMjpgPlayStateEvent"
      bind:mjpgnetstatus="onMjpgPlayerEvent"
    >
      <!--
        注意要指定slot属性，因为组件设置了 multipleSlots
        flvInner: 放在 live-player 内部，全屏时可见，随 live-player 销毁，视频流设备用
        mjpgInner: 放在 image 后面，随 image 销毁，图片流设备用
        after: 放在 live-player/image 后面，全屏时不可见，live-player/image 销毁后依然存在
      -->
      <iot-player-controls
        id="{{controlsId}}"
        slot="{{deviceInfo.isMjpgDevice ? 'mjpgInner' : 'flvInner'}}"
        showIcons="{{showIcons}}"
        iconSize="{{iconSize}}"
        qualityMap="{{qualityMap}}"
        quality="{{streamQuality}}"
        muted="{{muted}}"
        orientation="{{orientation}}"
        fullScreen="{{fullScreen}}"
        bind:clickicon="clickControlIcon"
      >
        <view class="player-control-item" bindtap="toggleVoice">
          <mp-icon icon="mike" size="{{iconSize}}" color="{{voiceState ? (voiceState === 'VoiceIdle' ? 'white' : 'orange') : 'grey'}}" type="{{voiceState === 'VoiceSending' ? 'field': 'outline'}}"></mp-icon>
        </view>
      </iot-player-controls>
      <view slot="after" class="debug-info-switch-container">
        <view class="debug-info-switch" bindtap="toggleDebugInfo">调试信息</view>
      </view>
    </iot-p2p-player-with-mjpg>
    <view class="page-section page-section-gap">
      <navigator url="/pages/empty/empty" style="color: blue;" hover-class="navigator-hover">打开其他页面（可能触发 live-player 暂停）</navigator>
      <button bindtap="retryPlayer" disabled="{{!isPlayError}}" type="primary" size="mini">重试</button>
    </view>
    <view class="page-section page-section-gap">
      <view class="page-section-title">对讲</view>
      <iot-p2p-voice
        id="{{voiceId}}"
        style="display:none"
        deviceInfo="{{deviceInfo}}"
        voiceType="{{options.voiceType}}"
        showLog="{{showLog}}"
        bind:voicestatechange="onVoiceStateChange"
        bind:voicestart="onVoiceProcess"
        bind:voicesuccess="onVoiceProcess"
        bind:voicestop="onVoiceProcess"
        bind:voiceerror="onVoiceError"
      />
      <view class="group-button-area">
        <button bindtap="startVoice" class="group-button" type="primary" size="mini" disabled="{{!voiceState || voiceState !== 'VoiceIdle'}}">
          对讲
        </button>
        <button bindtap="startVoice" data-need-record="1" class="group-button" type="primary" size="mini" disabled="{{!voiceState || voiceState !== 'VoiceIdle'}}">
          对讲+录制
        </button>
        <button bindtap="stopVoice" class="group-button" type="primary" size="mini" disabled="{{!voiceState || voiceState === 'VoiceIdle'}}">
          挂断
        </button>
      </view>
    </view>
    <view wx:if="{{options.supportPTZ}}" class="page-section page-section-gap">
      <view class="page-section-title">PTZ控制</view>
      <view class="ptz-panel">
        <view class="ptz-controls">
          <view class="ptz-controls-top">
            <view class="ptz-position">
              <view wx:for="{{ptzBtns}}" wx:key="name" class="ptz-dir ptz-{{item.name}}">
                <view class="ptz-btn"
                  data-cmd="{{item.cmd}}"
                  bind:touchstart="controlPTZ"
                  bind:touchend="releasePTZBtn"
                  bind:touchcancel="releasePTZBtn"
                >
                  <view class="ptz-icon arrow-{{item.name}} {{ptzCmd === item.cmd ? 'press' : ''}}"></view>
                </view>
              </view>
              <view class="ptz-cricle">
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
</view>
